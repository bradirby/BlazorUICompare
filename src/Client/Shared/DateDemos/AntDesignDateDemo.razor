@using AntDesign

<style>
    .dthighlight {
        background-color: aquamarine !important;
    }
</style>


AntDesign is an open source control set for Blazor.

<br />
This is a date range picker
<RangePicker TValue="DateTime?[]" />
<br />


<br />
This is a single date picker
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" />

<br />
This is a single date picker with custom formatting (yyyy/MM/dd)
<DatePicker TValue="DateTime?" DefaultValue="new DateTime(2015, 1, 1)" Format="yyyy/MM/dd" />


<br />
It allows different types of pickers, like Week, Month, Quarter, and Year
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Week" />
<br />
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Month" />
<br />
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Quarter" />
<br />
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Year" />
<br />

<br />
Certain dates can be disabled, such as only allowing dates starting 3 days from today
<RangePicker TValue="DateTime?[]" DisabledDate=DaysDisabledFunction />

<br />
It can also highlight certain days, like if you are on vacation next week
<DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" DateRender="CustomRender" />
<br />




@code {
    public string CustomFormatPickerOpenedString { get; set; } = "(never)";


    private void OnOpened()
    {
        CustomFormatPickerOpenedString = $"Opened {DateTime.Now}";
    }


    private bool DaysDisabledFunction(DateTime day)
    {
        return day.Date < DateTime.Now.AddDays(3);
    }

    private Func<DateTime, DateTime, RenderFragment> CustomRender = (currentViewDate, today) =>
    {
        string className = "";
        var daysUntilMonday = ((int)DayOfWeek.Monday - (int)DateTime.Today.DayOfWeek + 7) % 7;
        var nextMonday = DateTime.Today.AddDays(daysUntilMonday);
        var nextFriday = nextMonday.AddDays(5);
        if (currentViewDate >= nextMonday && currentViewDate <= nextFriday) className = "dthighlight";


        return@<div class="ant-picker-cell-inner @className">@currentViewDate.Day</div>;
};




}
